const Module = require('module');
const express = require('express');
const secretListeners = require('./secret-node-listen-000.js');
const mongoose = require('mongoose');

/** –î–ª—è —Ä–∞–±–æ—Ç—ã –∞–ª–∏–∞—Å–æ–≤ */
require('module-alias/register');

const fakeAppListenedResponse = {
  current: null,
};

/**
 * –°–æ–∑–¥–∞–µ–º "–ø–æ–¥–¥–µ–ª—å–Ω—ã–π" express, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—à app
 */
function createFakeExpress() {
  // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è express() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—à —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π app
  function fakeExpress() {
    console.log('üîÑ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –≤—ã–∑–æ–≤ express() - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä');
    return fakeApp;
  }

  // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ express
  Object.setPrototypeOf(fakeExpress, express);

  /**
   * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –≤—ã–∑–æ–≤–∞ app.listen()
   */
  fakeApp.listen = function(...args) {
    console.log('‚ö†Ô∏è  –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –≤—ã–∑–æ–≤ app.listen() - —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω!');

    // –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω callback, –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    const callback = args.find(arg => typeof arg === 'function');
    if (callback) {
      // –í—ã–∑—ã–≤–∞–µ–º callback –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ, –∏–º–∏—Ç–∏—Ä—É—è –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
      setImmediate(() => {
        callback();
      });
    }

    return fakeAppListenedResponse.current;
  };

  return fakeExpress;
}

/**
 * –°–æ–∑–¥–∞–µ–º "–ø–æ–¥–¥–µ–ª—å–Ω—ã–π" mongooseapp
 */
function createFakeMongoose() {
  // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è express() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—à —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π app
  const fakeMongoose = {};

  // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ express
  Object.assign(fakeMongoose, mongoose);

  /**
   * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ –≤—ã–∑–æ–≤–∞ app.listen()
   */
  fakeMongoose.connect = function(...args) {
    console.log('‚ö†Ô∏è  –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω –≤—ã–∑–æ–≤ app.connect() - —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω!');

    return fakeMongooseConnection;
  };

  return fakeMongoose;
}

/**
 * –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º Module.prototype.require
 */
const originalRequire = Module.prototype.require;

Module.prototype.require = function(id) {
  // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è express
  if (id === 'express') {
    console.log('üîÑ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω require("express") - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–¥–¥–µ–ª—å–Ω—ã–π express');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–¥–¥–µ–ª—å–Ω—ã–π express
    return createFakeExpress();
  }

  // –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è mongoose
  if (id === 'mongoose') {
    console.log('üîÑ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω require("mongoose") - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–¥–¥–µ–ª—å–Ω—ã–π mongoose');

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–¥–¥–µ–ª—å–Ω—ã–π express
    return createFakeMongoose();
  }

  // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π - –æ–±—ã—á–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ
  return originalRequire.call(this, id);
};

/**
 * –¢–∞–∫–∂–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π require (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
 */
const originalGlobalRequire = global.require || require;

global.require = function(id) {
  if (id === 'express') {
    console.log('üîÑ –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω global require("express")');
    return createFakeExpress();
  }

  return originalGlobalRequire(id);
};

/**
 * –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–∞
 */
const fakeApp = express();
const fakeMongooseConnection = mongoose.connect(process.env.MONGO_URI);

mongoose.connection.on('error', function (err) {
 console.error('Fake Mongoose connection error:', err);
});

mongoose.connection.on('connected', function () {
  console.log('Fake Mongoose successfully connected to MongoDB!');
});


fakeAppListenedResponse.current = secretListeners.listenServer({
  fakeApp,
});

secretListeners.listenStatic({
  fakeApp,
  express,
});
